<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

use Shellpea\AdvancedElasticsuiteCatalog\Block\ListProduct;
use Magento\Framework\Escaper;
use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\CurrentCategory;
use Hyva\Theme\ViewModel\ProductPage;
use Hyva\Theme\ViewModel\ProductListItem;

/** @var ListProduct $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var CurrentCategory $currentCategoryViewModel */
$currentCategoryViewModel = $viewModels->require(CurrentCategory::class);

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);

/** @var ProductListItem $productListItemViewModel */
$productListItemViewModel = $viewModels->require(ProductListItem::class);

$hideRatingSummary = (bool) $block->getData('hide_rating_summary');
$hideDetails = (bool) $block->getData('hideDetails');

$productCollection = $block->getLoadedProductCollection();
$actionName = $block->getRequest()->getFullActionName();

if ($actionName == 'catalogsearch_result_index') {
    $productCollection = $block->getSearchCollection();
}

?>

<?php if ($productCollection->count() === 0): ?>
    <div class="message info empty">
        <div>
            <?= $escaper->escapeHtml(__('We can\'t find products matching the selection.')) ?>
        </div>
    </div>
<?php else: ?>
    <section class="py-8">
        <?= $block->getToolbarHtml() ?>
        <?= $block->getAdditionalHtml() ?>

        <?php
        $viewMode = $block->getMode() === 'grid' ? 'grid' : 'list';
        $imageDisplayArea = $viewMode === 'grid' ? 'category_page_grid' : 'category_page_list';
        $showDescription = $viewMode === 'list';
        $templateType = $viewMode === 'grid'
            ? \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW
            : \Magento\Catalog\Block\Product\ReviewRendererInterface::FULL_VIEW;

        $pos = $block->getPositioned();
        ?>

        <div class="products wrapper mode-<?= $viewMode ?> products-<?= $viewMode ?>">
            <div x-data="initProductCard()"
                class="mx-auto pt-4 pb-12 grid gap-4 grid-cols-1 <?= $viewMode === 'grid' ? 'sm:grid-cols-2 xl:grid-cols-3' : '' ?>">
                <?php if (($actionName === 'catalog_category_view' || $actionName === 'catalogsearch_result_index') && $productCollection->getCurPage() > 1 && !$block->getRequest()->isAjax()): ?>
                    <?php $productsFromPrevPages = $actionName === 'catalog_category_view' ? $block->getProductsFromPrevPages() : $block->getProductsFromPrevPagesSearch(); ?>
                    <?php foreach ($productsFromPrevPages as $product): ?>
                        <?= $productListItemViewModel->getItemHtml($product, $block, $viewMode, $templateType, $imageDisplayArea, $showDescription) ?>
                    <?php endforeach; ?>
                <?php endif ?>

                <?php /** @var \Magento\Catalog\Model\Product $product */?>
                <?php foreach ($productCollection as $product): ?>
                    <?= $productListItemViewModel->getItemHtml($product, $block, $viewMode, $templateType, $imageDisplayArea, $showDescription) ?>
                <?php endforeach; ?>
            </div>
        </div>

        <?= $block->getChildBlock('toolbar')->setIsBottom(true)->toHtml() ?>
    </section>

    <script>
        function initProductCard() {
            return {
                addItemToCart(button) {
                    let body = new URLSearchParams(new FormData(button.form));

                    fetch(button.form.action, {
                        "headers": {
                            "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        "body": body,
                        "method": "POST",
                    }).then(response => {
                        if (response.redirected) {
                            window.location.href = response.url;
                        } else if (response.ok) {
                            return response.json();
                        } else {
                            window.dispatchMessages && window.dispatchMessages([{
                                type: 'warning',
                                text: '<?= $escaper->escapeJs(__('Could not add item to cart.')) ?>'
                            }]);
                        }
                    }).then(result => {
                        window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                    });
                }
            }
        }
    </script>
<?php endif; ?>
